services:
  db:
    image: postgres:13
    container_name: postgres_development
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
    expose:
      - ${DB_PORT}
    networks:
      - compose_network

  backend:
    build:
      context: .
      dockerfile: Docker/backend.Dockerfile
    image: backend_image_development
    container_name: backend_development
    environment:
      ENVIRONMENT: development
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_PORT: ${DJANGO_PORT}
      USE_POSTGRES: true
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      NODE_PORT: ${NODE_PORT}
    volumes:
      - ./backend:/app/backend
    ports:
      - "${DJANGO_PORT}:${DJANGO_PORT}"
    networks:
      - compose_network
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: Docker/frontend.Dockerfile
    image: frontend_image_development
    container_name: frontend_development
    environment:
      ENVIRONMENT: development
      NODE_PORT: ${NODE_PORT}
      VUE_APP_API_URL: http://localhost:${DJANGO_PORT}
    volumes:
      - ./frontend:/app/frontend/
    ports:
      - "${NODE_PORT}:${NODE_PORT}"
    networks:
      - compose_network
    depends_on:
      - backend

volumes:
  db_data:
    name: development_db_data
    driver: local

networks:
  compose_network:
    name: development_network
    driver: bridge
